#!/usr/bin/env ruby
# frozen_string_literal: true
# Exit cleanly from an early interrupt
Signal.trap("INT") { abort }

require "http"
require "version_sorter"

class RubyGemClient
  ENDPOINT = "https://rubygems.org/api/v1/versions/rails.json"

  def self.get_rails_info
    JSON.parse(HTTP.get(ENDPOINT))
  end
end

# Find all latest version of major releases
class LatestMajorsFinder
  def initialize(sorted_versions)
    @sorted_versions = sorted_versions
  end

  def call
    sorted_versions.group_by do |version|
      version.split(".")[0..1].join
    end.map { |lead, versions| VersionSorter.sort(versions).last }
  end

  private

    attr_reader :sorted_versions
end

rails_info = RubyGemClient.get_rails_info
sha256s = rails_info.reverse.map { |info| %(#{info["sha"]}  #{info["number"]}) }
sorted_versions = VersionSorter.sort rails_info.map { |info| info["number"] }
latest_majors = LatestMajorsFinder.new(sorted_versions).call
last_stables = latest_majors.last(2)

project_root = `git rev-parse --show-toplevel`.rstrip!
versions_path = File.join project_root, "rails", "versions.txt"
checksums_path = File.join project_root, "rails", "checksums.sha256"
stable_path = File.join project_root, "rails", "stable.txt"
latest_majors_path = File.join project_root, "rails", "latest_majors.txt"

puts "Rails versions (yanked excluded): #{sorted_versions.size}."

IO.write versions_path, sorted_versions.join("\n")
IO.write checksums_path, sha256s.join("\n")
puts "Updated rails/versions.txt."
puts "Updated rails/checksums.sha256."

puts "Rails latest major versions: #{latest_majors.join(", ")}."
IO.write latest_majors_path, latest_majors.join("\n")

puts "Rails stable versions: #{last_stables.join(", ")}."
IO.write stable_path, last_stables.join("\n")

puts "Updated rails/stable.txt."
